ALGORITHM FOR PERLIN SAMPLING OF ELEV VALS WITHIN VORONOI CELLS:
  > Query-Get all the verts of the poly; which you already (know how to) do.
  > Compute {minX, minY, maxX, maxY} AABB via the verts; which you know how to do.
  > Write randomPtInBoundBox(pX,pY,qX,qY){return vec2(int(random(pX,qX)), int(random(pY,qY)))}
  > Pass values returned therefrom into your "isInPolygon" function xor that of the Voronoi lib.
  > Set a sentinel threshold on `numTries` to get a point within the polygon (512 should do it?)
  > Run it as many times as needed per the LOD and/or scale of the Perlin field
  > Speaking of Perlin-based elevations: mapping options of its [0,1] output:
    o Linear with [elevMIN,elevMAX] s.t. absdist(elevMIN) much less than absdist(elevMAX)
      * this should effect "have some shallow underwater areas but overall bias above water level"
      * ideas for [elevMIN,elevMAX] in feet: [0,1] => {[-60,320], [-12,240], [-12,96], etc.}
    o Logarithmic/Easing: meh... KISS for now


YOU'RE ALSO REALIZING A CHUNK OF 'COBBLESTONE':
 > CAN USE DELAUNAY ESSENCE OF VERTS TO DEFINE MATERIAL TYPES, AS FOLLOWS...
 > INIT SET OF VERTS ARE {EXPLOSION SITE, BULLET, ETC.} CORRESP. TO SOME ACTION WHICH EFFECTS/ENCOMPASSES PCG DEST. TERRAIN
 > THEREOF, SECONDARY SET OF VERTS GENERATED WHICH ENCOMPASS 'STRESSORS' THAT DEFINE HOW DECOMPOSITION OCCURS; EXAMPLES:
    o BULLETPROOF GLASS: DENSELY PACKED CLUSTER OF SECONDARY POINTS, PERHAPS INCREASING CONTOURS OUT, WHEREFROM VD IS GENERATED
    o WEAK GLASS: EQUIDISTANTLY DISTRIBUTED VERTS (MAYBE 1/2 OF AVERAGE DIST BETWEEN INIT SET?) ENCOMPASSING EQUALLY-SIZED SHARDS, WHEREFROM "..."
    o EXPL CHARGE IN GRANITE: SIMILAR TO BULLETPROOF BUT IN 3D - RESULTING DEFORMATION ENCOMPASSES SMALL BUT HIGHLY-COMPRESSED VOID, WHEREFROM "..."
    o EXPL CHARGE IN MUD: DENSELY PACKED CLUSTERS OF SECONDARY POINTS, BUT NOT VIA INCREASING CONTOURS, WHEREFROM "..."
    o ETC. ETC. YOU GET ZEEE IDEA!